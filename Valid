from fractions import Fraction
import math
def get_integer(prompt="Please enter an integer: "):
    """
    Function to prompt for and return a valid integer.
    :param prompt: string Optional string to use as prompt
    :return: integer Valid integer
    """
    num = 0
    while True:
        try:
            num = int(input(prompt))
            return num
        except:
            print("Invalid integer.")

def get_real(prompt="Please enter an real number: "):
    """
    Function to prompt for and return a valid real number
    :param prompt: string Optional string to use as prompt
    :return: float Valid real number
    """
    num = 0.0
    while True:
        try:
            num = float(input(prompt))
            return num
        except:
            print("Invalid number.")

def get_string(prompt="Please enter a string: "):
    """
    Function to prompt for and return a string of characters.
    An empty string is invalid input.
    :param prompt: string Optional string to use as prompt
    :return: string Non-empty string of characters
    """
    chars = ""
    while True:
        chars = input(prompt)
        if chars != "":
            return chars
        else:
            print("Invalid string.")

def get_y_or_n(prompt="Please enter 'y' or 'n': "):
    """
    Function to prompt for and return 'y' or 'n'.
    'Y', 'N', and all cases of 'yes' and 'no' are accepted.
    :param prompt: string Optional string to use as prompt
    :return: string Non-empty string of characters
    """
    answer = ""
    answer = input(prompt)
    answer = answer.lower()

    while answer != "n" and answer != "y" and answer != "no" and answer != "yes":
        print("Invalid response.")
        answer = input(prompt)
        answer = answer.lower()

    return answer[0]

def convertFraction(frac):
    frac = float(frac)
    if frac < 1:
        return str(Fraction(frac).limit_denominator(100))
    else:
        wholeNum = int(math.floor(frac))
        Remain = frac - wholeNum
        if Remain != 0:
            return str(wholeNum) + " " + str(Fraction(Remain))
        return str(wholeNum)

def detCups(numCups):
    if numCups <= 1:
        single = convertFraction(numCups) + " cup"
        return single
            # from fractions import Fraction
            # Fraction(0.25)
            # Fraction(1, 4)
    else:
        mult = convertFraction(numCups) + " cups"
        return mult
def detPieces(numPieces):
    if numPieces == 1:
        single = convertFraction(numPieces) + " piece"
        return single
    else:
        mult = convertFraction(numPieces) + " pieces"
        return mult

def detTbsp(numSp):
    if numSp == 1:
        single = (str(numSp) + " tblsp")
        return single
    else:
        mult = convertFraction(numSp) + " tblsps"
        return mult
